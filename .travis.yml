language: julia
matrix:
  include:
    - os: linux
      addons:
        apt_packages:
          - gfortran
      julia:
        - 0.4
        - release
        - nightly
    - os: osx
      osx_image: xcode7.3
      julia:
        - 0.4
        - release
        - nightly
script:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    wget --no-check-certificate http://www.cmake.org/files/v3.3/cmake-3.3.2-Darwin-x86_64.tar.gz;
    tar -xzf cmake-3.3.2-Darwin-x86_64.tar.gz;
    export PATH=`pwd`/cmake-3.3.2-Darwin-x86_64/CMake.app/Contents/bin:$PATH; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    wget --no-check-certificate http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz;
    tar -xzf cmake-3.3.2-Linux-x86_64.tar.gz;
    sudo cp -fR cmake-3.3.2-Linux-x86_64/* /usr;
    export PATH=`pwd`/cmake-3.3.2-Linux-x86_64/bin:$PATH; fi
  - which cmake
  - cmake --version
  - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
  - julia -e 'Pkg.clone(pwd())'
  - julia -e 'Pkg.clone("https://github.com/JuliaSmoothOptimizers/NLPModels.jl.git"); Pkg.checkout("NLPModels", "develop"); Pkg.build("NLPModels")'
  - julia -e 'Pkg.clone("https://github.com/mlubin/AMPLMathProgInterface.jl.git")'
  - julia -e 'Pkg.add("Ipopt")'
  - julia --check-bounds=yes -e 'Pkg.build("AmplNLReader"); Pkg.test("AmplNLReader"; coverage=true)'
after_success:
  - julia -e 'cd(Pkg.dir("AmplNLReader")); Pkg.add("Coverage"); using Coverage; Coveralls.submit(Coveralls.process_folder())'
